use std::collections::HashSet;

fn main() {
    let mut group = HashSet::new();
    let sudo_password = "password".to_string();

    loop {
        let mut input = String::new();
        std::io::stdin().read_line(&mut input).unwrap();
        let parts: Vec<&str> = input.trim().split(' ').collect();

        match parts[0] {
            "add" => {
                if parts.len() != 3 {
                    println!("Invalid command.");
                    continue;
                }

                if parts[2] != sudo_password {
                    println!("Incorrect password.");
                    continue;
                }

                group.insert(parts[1].to_string());
                println!("{} has been added to the group.", parts[1]);
            }
            "remove" => {
                if parts.len() != 3 {
                    println!("Invalid command.");
                    continue;
                }

                if parts[2] != sudo_password {
                    println!("Incorrect password.");
                    continue;
                }

                if group.remove(parts[1]) {
                    println!("{} has been removed from the group.", parts[1]);
                } else {
                    println!("{} was not found in the group.", parts[1]);
                }
            }
            "remove-self" => {
                if parts.len() != 2 {
                    println!("Invalid command.");
                    continue;
                }

                let name = parts[1];
                if group.remove(name) {
                    println!("{} has been removed from the group.", name);
                } else {
                    println!("{} was not found in the group.", name);
                }
            }
            "add-self" => {
                if group.len() >= 2 {
                    println!("Group is full.");
                    continue;
                }

                let name = parts[1];
                if group.contains(name) {
                    println!("{} is already in the group.", name);
                } else {
                    group.insert(name.to_string());
                    println!("{} has been added to the group.", name);
                }
            }
            _ => {
                println!("Invalid command.");
            }
        }
    }
}
